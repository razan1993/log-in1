{"ast":null,"code":"var _jsxFileName = \"/home/razan/my-login/client/src/cal.js\";\n// import React from 'react';\n// import DayPicker from 'react-day-picker';\n// import 'react-day-picker/lib/style.css';\n// import data from './data.json';\n// export default function Example() {\n//   return (\n//     <DayPicker\n//       initialMonth={new Date(2020, 4)}\n//       selectedDays={[\n//         new Date(data[0].year, data[0].month, data[0].day),\n//         new Date(data[1].year, data[1].month, data[1].day),\n//         new Date(data[2].year, data[2].month, data[2].day),\n//       ]}\n//     />\n//   );\n// }\nimport React from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport data from './data.json';\nlet allSelectedDates = [];\ndata.forEach(item => {\n  allSelectedDates.push(new Date(item.year, item.month, item.day));\n});\nexport default function Example() {\n  return React.createElement(DayPicker, {\n    initialMonth: new Date(2020, 4),\n    selectedDays: allSelectedDates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n}\nconst birthdays = {\n  3: ['Mirko', 'Gianni'],\n  8: ['Elena'],\n  9: ['Irene'],\n  12: ['Paolo', 'Giorgia'],\n  18: ['Claudia'],\n  22: ['Maria', 'Luigi'],\n  25: ['Simone'],\n  26: ['Marta']\n};\n\nfunction renderDay(day) {\n  const date = day.getDate();\n  const dateStyle = {\n    position: 'absolute',\n    color: 'lightgray',\n    bottom: 0,\n    right: 0,\n    fontSize: 20\n  };\n  const birthdayStyle = {\n    fontSize: '0.8em',\n    textAlign: 'left'\n  };\n  const cellStyle = {\n    height: 50,\n    width: 60,\n    position: 'relative'\n  };\n  return React.createElement(\"div\", {\n    style: cellStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: dateStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, date), birthdays[date] && birthdays[date].map((name, i) => React.createElement(\"div\", {\n    key: i,\n    style: birthdayStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"\\uD83C\\uDF81 \", name)));\n}","map":{"version":3,"sources":["/home/razan/my-login/client/src/cal.js"],"names":["React","DayPicker","data","allSelectedDates","forEach","item","push","Date","year","month","day","Example","birthdays","renderDay","date","getDate","dateStyle","position","color","bottom","right","fontSize","birthdayStyle","textAlign","cellStyle","height","width","map","name","i"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAO,gCAAP;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,IAAIC,gBAAgB,GAAG,EAAvB;AACAD,IAAI,CAACE,OAAL,CAAcC,IAAD,IAAU;AACrBF,EAAAA,gBAAgB,CAACG,IAAjB,CAAsB,IAAIC,IAAJ,CAASF,IAAI,CAACG,IAAd,EAAoBH,IAAI,CAACI,KAAzB,EAAgCJ,IAAI,CAACK,GAArC,CAAtB;AACD,CAFD;AAIA,eAAe,SAASC,OAAT,GAAmB;AAChC,SACE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAE,IAAIJ,IAAJ,CAAS,IAAT,EAAe,CAAf,CADhB;AAEE,IAAA,YAAY,EAAEJ,gBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD;AACD,MAAMS,SAAS,GAAG;AAChB,KAAG,CAAC,OAAD,EAAU,QAAV,CADa;AAEhB,KAAG,CAAC,OAAD,CAFa;AAGhB,KAAG,CAAC,OAAD,CAHa;AAIhB,MAAI,CAAC,OAAD,EAAU,SAAV,CAJY;AAKhB,MAAI,CAAC,SAAD,CALY;AAMhB,MAAI,CAAC,OAAD,EAAU,OAAV,CANY;AAOhB,MAAI,CAAC,QAAD,CAPY;AAQhB,MAAI,CAAC,OAAD;AARY,CAAlB;;AAUA,SAASC,SAAT,CAAmBH,GAAnB,EAAwB;AACtB,QAAMI,IAAI,GAAGJ,GAAG,CAACK,OAAJ,EAAb;AACA,QAAMC,SAAS,GAAG;AAChBC,IAAAA,QAAQ,EAAE,UADM;AAEhBC,IAAAA,KAAK,EAAE,WAFS;AAGhBC,IAAAA,MAAM,EAAE,CAHQ;AAIhBC,IAAAA,KAAK,EAAE,CAJS;AAKhBC,IAAAA,QAAQ,EAAE;AALM,GAAlB;AAOA,QAAMC,aAAa,GAAG;AAAED,IAAAA,QAAQ,EAAE,OAAZ;AAAqBE,IAAAA,SAAS,EAAE;AAAhC,GAAtB;AACA,QAAMC,SAAS,GAAG;AAChBC,IAAAA,MAAM,EAAE,EADQ;AAEhBC,IAAAA,KAAK,EAAE,EAFS;AAGhBT,IAAAA,QAAQ,EAAE;AAHM,GAAlB;AAKA,SACE;AAAK,IAAA,KAAK,EAAEO,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAER,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,IAAxB,CADF,EAEGF,SAAS,CAACE,IAAD,CAAT,IACCF,SAAS,CAACE,IAAD,CAAT,CAAgBa,GAAhB,CAAoB,CAACC,IAAD,EAAOC,CAAP,KAClB;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAa,IAAA,KAAK,EAAEP,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACMM,IADN,CADF,CAHJ,CADF;AAWD","sourcesContent":["\n// import React from 'react';\n// import DayPicker from 'react-day-picker';\n// import 'react-day-picker/lib/style.css';\n// import data from './data.json';\n// export default function Example() {\n//   return (\n//     <DayPicker\n//       initialMonth={new Date(2020, 4)}\n//       selectedDays={[\n//         new Date(data[0].year, data[0].month, data[0].day),\n//         new Date(data[1].year, data[1].month, data[1].day),\n//         new Date(data[2].year, data[2].month, data[2].day),\n//       ]}\n//     />\n//   );\n// }\nimport React from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport data from './data.json';\n\nlet allSelectedDates = [];\ndata.forEach((item) => {\n  allSelectedDates.push(new Date(item.year, item.month, item.day));\n});\n\nexport default function Example() {\n  return (\n    <DayPicker\n      initialMonth={new Date(2020, 4)}\n      selectedDays={allSelectedDates}\n\n    />\n  );\n}\nconst birthdays = {\n  3: ['Mirko', 'Gianni'],\n  8: ['Elena'],\n  9: ['Irene'],\n  12: ['Paolo', 'Giorgia'],\n  18: ['Claudia'],\n  22: ['Maria', 'Luigi'],\n  25: ['Simone'],\n  26: ['Marta'],\n};\nfunction renderDay(day) {\n  const date = day.getDate();\n  const dateStyle = {\n    position: 'absolute',\n    color: 'lightgray',\n    bottom: 0,\n    right: 0,\n    fontSize: 20,\n  };\n  const birthdayStyle = { fontSize: '0.8em', textAlign: 'left' };\n  const cellStyle = {\n    height: 50,\n    width: 60,\n    position: 'relative',\n  };\n  return (\n    <div style={cellStyle}>\n      <div style={dateStyle}>{date}</div>\n      {birthdays[date] &&\n        birthdays[date].map((name, i) => (\n          <div key={i} style={birthdayStyle}>\n            üéÅ {name}\n          </div>\n        ))}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}